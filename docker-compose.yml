services:
  invoice-ocr:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - PYTHON_VERSION=3.10
    container_name: invoice-ocr-api
    ports:
      - "8004:8000"
    volumes:
      - ./src:/app/src
      - ./configs:/app/configs
      - ./scripts:/app/scripts
      - ./data/models:/app/data/models
      - ./data/temp:/app/data/temp
      - ./data/output:/app/data/output
      - ./logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app/src
      - CUDA_VISIBLE_DEVICES=0
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
      - GPU_MEMORY_UTILIZATION=0.9
      - MAX_MODEL_LENGTH=4096
      - MODEL_NAME=mistral-7b-instruct
      - LOG_LEVEL=INFO
      - POETRY_VIRTUALENVS_CREATE=false
      - POETRY_VIRTUALENVS_IN_PROJECT=false
    env_file:
      - .env
    # Temporarily disabled GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: invoice-ocr-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: invoice-ocr-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped

volumes:
  redis_data:
  prometheus_data:

networks:
  default:
    driver: bridge